@model RouteWayAPP.Models.Employee

@{
    ViewData["Title"] = "Index";
}
<div>
    <div>
        <h1>Hello, @Html.DisplayFor(model => model.Name)</h1>

        <h2>Here's your schedule for today:</h2>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Store Id
                </th>
                <th>
                    Store Name
                </th>
                <th>
                    Street Address
                </th>
                <th>
                    Duties
                </th>
                <th>
                    Time
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var scheduleStop in Model.Route.Schedule.ScheduleStops)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => scheduleStop.Stop.StoreId)
                    </td>
                    <td>
                        @Html.ActionLink($"{scheduleStop.Stop.Store.StoreName}", "StoreDetails", new { storeId = scheduleStop.Stop.Store.StoreId })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => scheduleStop.Stop.Store.StreetAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => scheduleStop.Stop.Type)
                    </td>
                    <td>
                        @if (scheduleStop.Stop.DeliveryId != null)
                        {
                            @scheduleStop.Stop.Delivery.DeliveryTime
                        }
                        else
                        {
                            @:None
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Stop Details", "StopDetails", new { stopId = scheduleStop.Stop.StopId })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div multiple id="locations" style="display:none">
        @foreach (var scheduleStop in Model.Route.Schedule.ScheduleStops)
        {
            @scheduleStop.Stop.Store.StreetAddress
        }
    </div>


    <body onload="initialize()">
        <div id="map" style="width: 700px; height: 480px;"></div>
    </body>

    <script>
            var map;
        function initialize() {
            var mapOptions = {
                center: { lat: @Model.Route.Schedule.ScheduleStops.First().Stop.Store.Lat, lng: @Model.Route.Schedule.ScheduleStops.First().Stop.Store.Long},
                zoom: 12,
            }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
            var pins = [];
            let store = {};
        @foreach(var scheduleStop in Model.Route.Schedule.ScheduleStops)
        {
            @:store = {lat:@scheduleStop.Stop.Store.Lat,lng:@scheduleStop.Stop.Store.Long}
            @:pins.push(store);
        }
            for (i = 0; i < pins.length; i++) {
                var marker = new google.maps.Marker({
                    map: map,
                    position: pins[i]
                });
            }
        }
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key= + @KeyVariables.GoogleKey">
    </script>

</div>